{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pemrograman Berorientasi Objek Intro Pemrograman berorientasi Objek ( PBO ) Pada tutorial Pemrograman Berorientasi Objek ini terdapat 4 bahasa yang","title":"Home"},{"location":"#pemrograman-berorientasi-objek","text":"","title":"Pemrograman Berorientasi Objek"},{"location":"#intro","text":"Pemrograman berorientasi Objek ( PBO ) Pada tutorial Pemrograman Berorientasi Objek ini terdapat 4 bahasa yang","title":"Intro"},{"location":"01_konsep_pemrograman_berorientasi_objek/","text":"Pendekatan Desain dan Program Berorientasi Objek Inheritance Inheritance Merupakan teknik mewariskan fungsi/method yang ada di satu class ke class lainnya . Pada Inheritance terdiri dari 2 Kateogri. 1. Sub Class (Child) Polymorphism Encapsulation Abstraction","title":"01. Konsep Pemrograman Berorientasi Objek"},{"location":"01_konsep_pemrograman_berorientasi_objek/#pendekatan-desain-dan-program-berorientasi-objek","text":"","title":"Pendekatan Desain dan Program Berorientasi Objek"},{"location":"01_konsep_pemrograman_berorientasi_objek/#inheritance","text":"Inheritance Merupakan teknik mewariskan fungsi/method yang ada di satu class ke class lainnya . Pada Inheritance terdiri dari 2 Kateogri. 1. Sub Class (Child)","title":"Inheritance"},{"location":"01_konsep_pemrograman_berorientasi_objek/#polymorphism","text":"","title":"Polymorphism"},{"location":"01_konsep_pemrograman_berorientasi_objek/#encapsulation","text":"","title":"Encapsulation"},{"location":"01_konsep_pemrograman_berorientasi_objek/#abstraction","text":"","title":"Abstraction"},{"location":"02_praktik_pendekatan_pbo/","text":"Pendekatan Pemrograman Berorientasi Objek Slide : Pada bagian ini akan dipelajari bagaimana pengimplementasian dasar konsep pemrograman berorientasi objek. Pada bagian ini kita akan mempelajari pembuatan dan penggunaan class. serta Class Class merupakan bagian utama dari suatu modul. Java C# Visual Basic Python 1 2 3 4 package com.pbo.myproject ; class MyClass { } 1 2 3 4 5 6 using System ; namespace myproject { class MyClass { } } 1 2 3 Module MyClass End Module 1 class MyClass : Function / Method Java C# Visual Basic Python 1 2 3 4 5 6 7 package com.pbo.myproject ; class MyClass { public static void main ( String [] args ) { System . out . println ( \"Hello World!\" ) } } using System ; namespace myproject { class MyClass { static void main ( String [] args ) { Console . WriteLine ( \"Hello World!\" ) } } } Module MyClass Sub Main ( args As String ()) Console . WriteLine ( \"Hello World!\" ) End Sub End Module class MyClass : def main ( self ): print ( \"Hello World!\" ) if __name__ == '__main__' : MyClass . main () Info Python merupakan bahasa pemrograman yang mengharuskan identasi / posisi setiap baris sesuai dengan levelnya Attributes / Variable Global Attributes / Variable Global merupakan variable yang dapat di akses method di dalam class Class Constructor Constructor merupakan method yang pertama kali di eksekusi saat class di deklarasikan. Parameters Java C# Visual Basic Python 1 2 3 4 5 6 7 8 9 10 11 12 package com.pbo.myproject ; class MyClass { public static void main ( String [] args ) { System . out . println ( \"Hello World!\" ) } public void hitung ( int harga_satuan , int jumlah_beli ) { int total_harga = harga_satuan * jumlah_beli System . out . println ( total_harga ) } } using System ; namespace myproject { class MyClass { static void main ( String [] args ) { Console . WriteLine ( \"Hello World!\" ) } public void hitung ( int harga_satuan , int jumlah_beli ) { int total_harga = harga_satuan * total_beli Console . WriteLine ( total_harga ) } } } Module MyClass Sub Main ( args As String ()) Console . WriteLine ( \"Hello World!\" ) End Sub Sub Hitung ( Dim harga_satuan , Dim jumlah_beli ) Dim total_harga = harga_satuan * total_beli Console . WriteLine ( total_harga ) End Sub End Module class MyClass : def main ( self ): print ( \"Hello World!\" ) def hitung ( self , harga_satuan , jumlah_beli ): total_harga = harga_satuan * jumlah_beli print ( total_harga ) if __name__ == '__main__' : MyClass . main () Return Type aa Komunikasi antar Method aa Variables Variable merupakan bagian dari method yang merepresentasikan suatu nilai. Nilai-nilai tersebut memiliki tipe data. Setiap tipe data memiliki kegunaan yang berbeda. Tugas aa","title":"02. Praktik Pendekatan Pemrograman Berorientasi Objek"},{"location":"02_praktik_pendekatan_pbo/#pendekatan-pemrograman-berorientasi-objek","text":"Slide : Pada bagian ini akan dipelajari bagaimana pengimplementasian dasar konsep pemrograman berorientasi objek. Pada bagian ini kita akan mempelajari pembuatan dan penggunaan class. serta","title":"Pendekatan Pemrograman Berorientasi Objek"},{"location":"02_praktik_pendekatan_pbo/#class","text":"Class merupakan bagian utama dari suatu modul. Java C# Visual Basic Python 1 2 3 4 package com.pbo.myproject ; class MyClass { } 1 2 3 4 5 6 using System ; namespace myproject { class MyClass { } } 1 2 3 Module MyClass End Module 1 class MyClass :","title":"Class"},{"location":"02_praktik_pendekatan_pbo/#function-method","text":"Java C# Visual Basic Python 1 2 3 4 5 6 7 package com.pbo.myproject ; class MyClass { public static void main ( String [] args ) { System . out . println ( \"Hello World!\" ) } } using System ; namespace myproject { class MyClass { static void main ( String [] args ) { Console . WriteLine ( \"Hello World!\" ) } } } Module MyClass Sub Main ( args As String ()) Console . WriteLine ( \"Hello World!\" ) End Sub End Module class MyClass : def main ( self ): print ( \"Hello World!\" ) if __name__ == '__main__' : MyClass . main () Info Python merupakan bahasa pemrograman yang mengharuskan identasi / posisi setiap baris sesuai dengan levelnya","title":"Function / Method"},{"location":"02_praktik_pendekatan_pbo/#attributes-variable-global","text":"Attributes / Variable Global merupakan variable yang dapat di akses method di dalam class","title":"Attributes / Variable Global"},{"location":"02_praktik_pendekatan_pbo/#class-constructor","text":"Constructor merupakan method yang pertama kali di eksekusi saat class di deklarasikan.","title":"Class Constructor"},{"location":"02_praktik_pendekatan_pbo/#parameters","text":"Java C# Visual Basic Python 1 2 3 4 5 6 7 8 9 10 11 12 package com.pbo.myproject ; class MyClass { public static void main ( String [] args ) { System . out . println ( \"Hello World!\" ) } public void hitung ( int harga_satuan , int jumlah_beli ) { int total_harga = harga_satuan * jumlah_beli System . out . println ( total_harga ) } } using System ; namespace myproject { class MyClass { static void main ( String [] args ) { Console . WriteLine ( \"Hello World!\" ) } public void hitung ( int harga_satuan , int jumlah_beli ) { int total_harga = harga_satuan * total_beli Console . WriteLine ( total_harga ) } } } Module MyClass Sub Main ( args As String ()) Console . WriteLine ( \"Hello World!\" ) End Sub Sub Hitung ( Dim harga_satuan , Dim jumlah_beli ) Dim total_harga = harga_satuan * total_beli Console . WriteLine ( total_harga ) End Sub End Module class MyClass : def main ( self ): print ( \"Hello World!\" ) def hitung ( self , harga_satuan , jumlah_beli ): total_harga = harga_satuan * jumlah_beli print ( total_harga ) if __name__ == '__main__' : MyClass . main ()","title":"Parameters"},{"location":"02_praktik_pendekatan_pbo/#return-type","text":"aa","title":"Return Type"},{"location":"02_praktik_pendekatan_pbo/#komunikasi-antar-method","text":"aa","title":"Komunikasi antar Method"},{"location":"02_praktik_pendekatan_pbo/#variables","text":"Variable merupakan bagian dari method yang merepresentasikan suatu nilai. Nilai-nilai tersebut memiliki tipe data. Setiap tipe data memiliki kegunaan yang berbeda.","title":"Variables"},{"location":"02_praktik_pendekatan_pbo/#tugas","text":"aa","title":"Tugas"},{"location":"03_tipe_data_dan_operator/","text":"Tipe Data","title":"03. Variable Tipe Data"},{"location":"03_tipe_data_dan_operator/#tipe-data","text":"","title":"Tipe Data"},{"location":"04_conditional/","text":"","title":"04. Operator Kondisi"},{"location":"05_loops/","text":"","title":"05. Operator Perulangan"},{"location":"06_array_list/","text":"","title":"06. Tipe data Himpunan / Array"},{"location":"07_konsep_pemodelan/","text":"class method constructor variable global access level (private public protected)","title":"07. Konsep Pemodelan"},{"location":"08_konsep_pemodelan/","text":"polymorphism, inheritance","title":"08."},{"location":"09_konsep_pemodelan/","text":"abstract dan interface","title":"09."},{"location":"10_error_handling/","text":"","title":"10. Penanganan Error"},{"location":"11_multithreading/","text":"","title":"11. Multi Threading"},{"location":"12_io/","text":"","title":"12. Input dan Output I/O"},{"location":"13_enkripsi_tradisional/","text":"","title":"13. Enkripsi"},{"location":"14_gui_basic/","text":"","title":"14. GUI Basic"},{"location":"15_gui_database/","text":"","title":"15. GUI Database"}]}